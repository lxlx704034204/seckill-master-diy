<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 配置整合mybatis过程 ：-->
	
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.利用c3p0.jar  配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池最基本的属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl"  	 value="${jdbc.url}" />
		<property name="user" 		 value="${jdbc.username}" />
		<property name="password" 	 value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" /> <!--最多保持30个数据库的connection  -->
		<property name="minPoolSize" value="10" />
		<!-- 设置关闭db连接后    (放在池子里面的连接对象)不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 ：当db连接个数到30的时候，等待连接的time(如果设置为0代表无限链接！)-->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 ：if 连接了2次都连接不到db的话 就给出一个提示的exception-->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入 上面配置的数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml 告诉spring 我的mybatis文件路径和name -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名(这样用po的时候就不需要 写它的包名了！！) -->
		<property name="typeAliasesPackage" value="org.seckill.entity" />
		<!-- 扫描sql配置文件:mapper需要的xml文件：Dao层的实现 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包：目的：动态实现Dao接口，注入到soring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao" />
	</bean>
	<!--
	Spring IOC: spring依赖注入：
	http://www.imooc.com/learn/631：   
	 业务关系依赖图：2:05
	 为什么用 IOC	3:30	
	
	  -->
	
	
	
	

	<!--此项目是直接配置在了 xml中 --> 
	<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost" />
		<constructor-arg index="1" value="6379" />
	</bean>

</beans>